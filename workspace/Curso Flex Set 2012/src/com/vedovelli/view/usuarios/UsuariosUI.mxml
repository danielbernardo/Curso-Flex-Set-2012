<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%"
		  creationComplete="init(event)">
	
	<fx:Declarations>
		<s:RemoteObject id="ro" 
						source="UsuarioController"
						destination="zend"
						endpoint="http://cf.local/php/gateway.php"
						fault="onFault(event)"
						showBusyCursor="true">
			
			<s:method name="listar" 
					  result="onlistarResult(event)">
			</s:method>
			
			<s:method name="criar" 
					  result="ongravarResult(event)">
				<s:arguments>
					<usuario>{_usuario}</usuario>
				</s:arguments>
			</s:method>
			
			<s:method name="atualizar" 
					  result="onatualizarResult(event)">
				<s:arguments>
					<usuario>{_usuario}</usuario>
				</s:arguments>
			</s:method>
			
			<s:method name="remover" 
					  result="onremoverResult(event)">
				<s:arguments>
					<id>{_usuarioId}</id>
				</s:arguments>
			</s:method>

		</s:RemoteObject>	
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.vedovelli.vo.UsuarioVO;
			
			import events.NotificacaoEvent;
			import events.UsuariosEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var _usuarioId:int;
			
			[Bindable]
			private var _lista:ArrayCollection;
			
			[Bindable]
			private var _listaNiveis:ArrayCollection;
			
			[Bindable]
			private var _usuario:UsuarioVO;
			
			protected function init(event:FlexEvent):void
			{
				this.addEventListener(UsuariosEvent.REMOVER, removerUsuario);
				_usuario = new UsuarioVO();
				ro.listar();
			}
			
			protected function selecionarDDList():void
			{
				var i:int = 0;
				var length:int = _listaNiveis.length;
				
				for (i; i < length; i++) 
				{
					if(_usuario != null){
						if( _listaNiveis.getItemAt(i).data == _usuario.nivel ){
							listaNiveis.selectedIndex = i;
							break;
						}
					}
				}
				
			}
			
			protected function onlistarResult(event:ResultEvent):void
			{
				_lista = new ArrayCollection(event.result as Array);
			}
			
			protected function onFault(event:FaultEvent):void
			{
				Alert.show('Falha');
			}
			
			protected function listaUsuarios_valueCommitHandler(event:FlexEvent):void
			{
				_usuario = listaUsuarios.selectedItem as UsuarioVO;
				selecionarDDList();
			}
			
			protected function btnSalvar_clickHandler(event:MouseEvent):void
			{
				if(_usuario.id && _usuario.id > 0){
					ro.atualizar()
				} else {
					ro.criar();
				}
			}
			
			private function limpar():void
			{
				listaUsuarios.selectedIndex = -1;
				listaNiveis.selectedIndex = 0;
				_usuario = new UsuarioVO();
				_usuario.nivel = listaNiveis.selectedItem.data;
			}
			
			protected function ongravarResult(event:ResultEvent):void
			{
				_lista.addItemAt(event.result, 0);
				limpar();
				
				var ev:NotificacaoEvent = new NotificacaoEvent(NotificacaoEvent.MOSTRAR);
					ev.headerText = 'Usuário';
					ev.bodyText = 'Usuário criado com sucesso!';
				
				this.dispatchEvent(ev);
				
			}
			
			protected function listaNiveis_valueCommitHandler(event:FlexEvent):void
			{
				_usuario.nivel = listaNiveis.selectedItem.data;
			}
			
			protected function onatualizarResult(event:ResultEvent):void
			{
				if(event.result is UsuarioVO){
					var index:int = listaUsuarios.selectedIndex;
					_lista.setItemAt(event.result, index);
					limpar();
					var ev:NotificacaoEvent = new NotificacaoEvent(NotificacaoEvent.MOSTRAR);
					ev.headerText = 'Usuário';
					ev.bodyText = 'Usuário atualizado com sucesso!';
					
					this.dispatchEvent(ev);
				}
			}
			
			protected function onremoverResult(event:ResultEvent):void
			{
				if(event.result){
					_lista.removeItemAt(listaUsuarios.selectedIndex);
					limpar();
					var ev:NotificacaoEvent = new NotificacaoEvent(NotificacaoEvent.MOSTRAR);
					ev.headerText = 'Usuário';
					ev.bodyText = 'Usuário removido com sucesso!';
					
					this.dispatchEvent(ev);
				}
			}
			
			private function fazer_remocao(event:CloseEvent):void
			{
				if(event.detail == Alert.YES){
					ro.remover();
				}
			}
			
			protected function listaNiveis_creationCompleteHandler(event:FlexEvent):void
			{
				_listaNiveis = new ArrayCollection([
					{data: 'administrador', label: 'Administrador'},
					{data: 'usuario', label: 'Usuário'}
				]);
				listaNiveis.selectedIndex= 0;
				_usuario.nivel = listaNiveis.selectedItem.data;
			}
			
			protected function removerUsuario(event:UsuariosEvent):void
			{
				_usuarioId = event.usuario.id;
				Alert.show(
					'Tem certeza que deseja excluir '+ _usuario.usuario + '?', 
					'ATENÇÃO', 
					Alert.YES|Alert.NO, 
					null, 
					fazer_remocao 
				);
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>
	
	<s:DataGrid id="listaUsuarios" dataProvider="{_lista}" 
				width="100%" height="100%" 
				valueCommit="listaUsuarios_valueCommitHandler(event)">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="id" headerText="ID" width="50"></s:GridColumn>
				<s:GridColumn dataField="usuario" headerText="Usuário"></s:GridColumn>
				<s:GridColumn dataField="nivel" headerText="Nível"></s:GridColumn>
				<s:GridColumn headerText="Deletar" width="85" itemRenderer="com.vedovelli.view.usuarios.ir.BotaoDeletarIR"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
		
	</s:DataGrid>
	
	<s:Form width="100%" height="100%">
		<s:FormHeading label="Gerenciamento de Usuários"/>
		<s:FormItem label="Usuario">
			<s:TextInput text="@{_usuario.usuario}"/>
		</s:FormItem>
		<s:FormItem label="Senha">
			<s:TextInput text="@{_usuario.senha}"/>
		</s:FormItem>
		<s:FormItem label="Nivel">
			<s:DropDownList id="listaNiveis"
							creationComplete="listaNiveis_creationCompleteHandler(event)"
							dataProvider="{_listaNiveis}"
							valueCommit="listaNiveis_valueCommitHandler(event)"></s:DropDownList>
		</s:FormItem>
		<s:FormItem>
			<s:HGroup>
				<s:Button id="btnSalvar" label="Salvar" click="btnSalvar_clickHandler(event)"/>
				<!--<s:Button id="btnDeletar" enabled="{listaUsuarios.selectedIndex > -1}" label="Deletar" click="btnDeletar_clickHandler(event)"/>-->
				<s:Button id="btnLimpar" enabled="{listaUsuarios.selectedIndex > -1}" label="Limpar" click="limpar()"/>
			</s:HGroup>
		</s:FormItem>
	</s:Form>
	
</s:NavigatorContent>