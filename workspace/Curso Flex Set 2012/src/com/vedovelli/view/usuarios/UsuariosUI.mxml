<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					width="100%" height="100%"
					creationComplete="init(event)">

	<fx:Script>
		<![CDATA[
			import com.vedovelli.event.UsuariosEvent;
			import com.vedovelli.vo.UsuarioVO;

			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			[Bindable]
			public var usuarioId:int;

			[Bindable]
			public var listaNiveis:ArrayCollection;

			[Bindable]
			[Inject(source="usuariosController.usuario", bind="true")]
			public var usuario:UsuarioVO;

			[Bindable]
			[Inject(source="usuariosController.lista", bind="true")]
			public var lista:ArrayCollection;

			[Inject(source="usuariosController.removido", bind="true")]
			public function set removido(value:Boolean):void
			{
				if(lista != null && listaUsuarios != null){
					lista.removeItemAt(listaUsuarios.selectedIndex);
					limpar();
				}
			}

			[Inject(source="usuariosController.limpar", bind="true")]
			public function set setLimpar(value:Boolean):void
			{
				limpar();
			}

			protected function init(event:FlexEvent):void
			{
				usuario = new UsuarioVO();
				this.dispatchEvent( new UsuariosEvent(UsuariosEvent.LISTAR) );
			}

			protected function selecionarDDList():void
			{
				var i:int = 0;
				var length:int = listaNiveis.length;

				for (i; i < length; i++) 
				{
					if(usuario != null){
						if( listaNiveis.getItemAt(i).data == usuario.nivel ){
							cbNiveis.selectedIndex = i;
							break;
						}
					}
				}
			}

			protected function listaUsuarios_valueCommitHandler(event:FlexEvent):void
			{
				usuario = listaUsuarios.selectedItem as UsuarioVO;
				selecionarDDList();
			}

			protected function btnSalvar_clickHandler(event:MouseEvent):void
			{
				var ev:UsuariosEvent;
				if(usuario.id && usuario.id > 0){
					ev = new UsuariosEvent(UsuariosEvent.ATUALIZAR);
				} else {
					ev = new UsuariosEvent(UsuariosEvent.CRIAR);
				}
				ev.usuario = usuario;
				dispatchEvent(ev);
			}

			private function limpar():void
			{
				if(listaUsuarios!=null){
					listaUsuarios.selectedIndex = -1;
				}
				if(cbNiveis != null){
					cbNiveis.selectedIndex = 0;
					usuario = new UsuarioVO();
					usuario.nivel = cbNiveis.selectedItem.data;
				}
			}

			protected function listaNiveis_valueCommitHandler(event:FlexEvent):void
			{
				if(usuario != null){
					usuario.nivel = cbNiveis.selectedItem.data;
				}
			}

			protected function listaNiveis_creationCompleteHandler(event:FlexEvent):void
			{
				listaNiveis = new ArrayCollection([
					{data: 'administrador', label: 'Administrador'},
					{data: 'usuario', label: 'Usuário'}
					]);
				cbNiveis.selectedIndex= 0;
				if(usuario != null){
					usuario.nivel = cbNiveis.selectedItem.data;
				}
			}

		]]>
	</fx:Script>

	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>

	<s:DataGrid id="listaUsuarios" dataProvider="{lista}" 
				width="100%" height="100%" 
				valueCommit="listaUsuarios_valueCommitHandler(event)">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="id" headerText="ID" width="50"></s:GridColumn>
				<s:GridColumn dataField="usuario" headerText="Usuário"></s:GridColumn>
				<s:GridColumn dataField="nivel" headerText="Nível"></s:GridColumn>
				<s:GridColumn headerText="Deletar" width="85" itemRenderer="com.vedovelli.view.usuarios.ir.BotaoDeletarIR"></s:GridColumn>
			</s:ArrayList>
		</s:columns>

	</s:DataGrid>

	<s:Form width="100%" height="100%">
		<s:FormHeading label="Gerenciamento de Usuários"/>
		<s:FormItem label="Usuario">
			<s:TextInput text="@{usuario.usuario}"/>
		</s:FormItem>
		<s:FormItem label="Senha">
			<s:TextInput text="@{usuario.senha}"/>
		</s:FormItem>
		<s:FormItem label="Nivel">
			<s:DropDownList id="cbNiveis"
							creationComplete="listaNiveis_creationCompleteHandler(event)"
							dataProvider="{listaNiveis}"
							valueCommit="listaNiveis_valueCommitHandler(event)"></s:DropDownList>
		</s:FormItem>
		<s:FormItem>
			<s:HGroup>
				<s:Button id="btnSalvar" label="Salvar" click="btnSalvar_clickHandler(event)"/>
				<!--<s:Button id="btnDeletar" enabled="{listaUsuarios.selectedIndex > -1}" label="Deletar" click="btnDeletar_clickHandler(event)"/>-->
				<s:Button id="btnLimpar" enabled="{listaUsuarios.selectedIndex > -1}" label="Limpar" click="limpar()"/>
			</s:HGroup>
		</s:FormItem>
	</s:Form>

</s:NavigatorContent>
